{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Plain Text Diagram",
	"patterns": [
	  {
		"include": "#keywords"
	  },
	  {
		"include": "#methodCalls"
	  },
	  {
		"include": "#descriptions"
	  },
	  {
		"include": "#comments"
	  },
	  {
		"include": "#labels"
	  },
	  {
		"include": "#relationships"
	  },
	  {
		"include": "#classes"
	  },
	  {
		"include": "#variables"
	  },
	  {
		"include": "#numbers"
	  },
	  {
		"include": "#operators"
	  }
	],
	"repository": {
	  "keywords": {
		"patterns": [{
		  "name": "keyword.control.ptd",
		  "match": "\\b(Diagram|Scope|Files|Variables|Functions|Classes|Class Relationships|Imports|Use Cases|Scenario|Attributes|Methods|Interfaces|file|interface)\\b"
		}]
	  },
	  "methodCalls": {
		"patterns": [
		  {
			"match": "(?:(?:->\\s*)|\\s+)([a-zA-Z][a-zA-Z0-9]*)\\(([^\\)]*)\\)\\s*(\\[class\\s+[A-Z][a-zA-Z0-9]*,\\s*[A-Z][a-zA-Z0-9]*\\.ts\\])",
			"captures": {
			  "1": { "name": "entity.name.function.ptd" },
			  "2": { "name": "variable.parameter.ptd" },
			  "3": { "patterns": [{ "include": "#classReference" }] }
			}
		  }
		]
	  },
	  "classReference": {
		"match": "\\[class\\s+([A-Z][a-zA-Z0-9]*),\\s*([A-Z][a-zA-Z0-9]*\\.ts)\\]",
		"captures": {
		  "1": { "name": "entity.name.type.class.ptd" },
		  "2": { "name": "string.filepath.ptd" }
		}
	  },
	  "descriptions": {
		"patterns": [
		  {
			"name": "string.unquoted.description.ptd",
			"begin": "(?<=description:\\s)",
			"end": "$"
		  },
		  {
			"name": "string.unquoted.scenario.ptd",
			"begin": "(?<=Scenario:\\s)",
			"end": "$"
		  },
		  {
			"name": "string.unquoted.action.ptd",
			"match": "(?<=->\\s)[^\\[\\]<>\\(\\)\\{\\}]+(?=\\s*(?:<|$))"
		  },
		  {
			"name": "string.unquoted.return.ptd",
			"match": "(?<=<\\s)[^\\[\\]<>\\(\\)\\{\\}]+(?=\\s*$)"
		  }
		]
	  },
	  "comments": {
		"name": "comment.line.number-sign.ptd",
		"match": "#.*$"
	  },
	  "labels": {
		"name": "entity.name.label.ptd",
		"match": "\\b(name|version|description|extends|implements|inherits|contains|creates|charges|diagnoses|uses)\\b"
	  },
	  "relationships": {
		"patterns": [
		  {
			"name": "keyword.operator.relationship.ptd",
			"match": "-->"
		  },
		  {
			"name": "meta.relationship.description.ptd",
			"match": "(?<=-->\\s)[^(\\s]+(?=\\s|$)"
		  }
		]
	  },
	  "classes": {
		"patterns": [
		  {
			"name": "entity.name.type.class.ptd",
			"match": "\\b[A-Z][a-zA-Z0-9]*(?=\\.ts|\\s|$)"
		  }
		]
	  },
	  "functions": {
		"patterns": [
		  {
			"name": "entity.name.function.ptd",
			"match": "\\b[a-z][a-zA-Z0-9]*(?=\\()"
		  },
		  {
			"name": "variable.parameter.ptd",
			"match": "(?<=\\()[^\\)]*(?=\\))"
		  }
		]
	  },
	  "variables": {
		"patterns": [
		  {
			"name": "variable.other.constant.ptd",
			"match": "\\bconst\\s+([a-zA-Z][a-zA-Z0-9]*)\\b"
		  },
		  {
			"name": "variable.other.ptd",
			"match": "\\blet\\s+([a-zA-Z][a-zA-Z0-9]*)\\b"
		  }
		]
	  },
	  "numbers": {
		"name": "constant.numeric.ptd",
		"match": "\\b\\d+(?:\\.\\d+)?\\b"
	  },
	  "operators": {
		"name": "keyword.operator.ptd",
		"match": "->|<|>|\\[|\\]|\\{|\\}|\\(|\\)|@|\\."
	  }
	},
	"scopeName": "text.ptd"
  }